@using DAF.Core;
@using DAF.Web;
@using DAF.Core.Security;
@using DAF.SSO;
@using DAF.Workflow;
@using DAF.Workflow.Models;
@{
    this.Layout = null;
    bool addStyleAndScripts = true;
    if (Page.ExcludeStyleAndScripts != null)
    {
        addStyleAndScripts = false;
    }

    TargetFlowWrapper tflow = Page.TargetFlowWrapper;
    string clientId = Request.QueryString["client"].DefaultIfNull(AuthHelper.CurrentClient.ClientId);
    if (tflow == null)
    {
        TargetFlowInfo tfi = null;
        if (!string.IsNullOrEmpty(Request.QueryString["id"]))
        {
            tfi = WorkflowHelper.StateFlowService.GetTargetFlow(Request.QueryString["id"]);
        }
        else
        {
            var targetId = Request.QueryString["targetId"];
            var flowCodeOrTargetType = Request.QueryString["flowCode"].DefaultIfNull(Request.QueryString["targetType"]);
            tfi = WorkflowHelper.StateFlowService.GetTargetFlow(clientId, flowCodeOrTargetType, targetId);
        }
        tflow = new TargetFlowWrapper(tfi);
    }
    tflow.Build();
}
@if (addStyleAndScripts)
{
    @AssetsHelper.Css("/Content/workflow.css")
    @AssetsHelper.Script("/Scripts/workflow.js")
}
<div class="workflow-target">
    @if (tflow == null)
    {
        <h3>无相关工作流数据。</h3>
    }
    else
    {
        var node = tflow.BeginState;
        var detailUrl = "#";
        if (!string.IsNullOrEmpty(tflow.FlowInfo.BizFlow.BizFlow.DetailUrl))
        {
            detailUrl = string.Format("{0}?targetId={1}&targetFlowId={2}", tflow.FlowInfo.BizFlow.BizFlow.DetailUrl, tflow.FlowInfo.TargetFlow.TargetId, tflow.FlowInfo.TargetFlow.TargetFlowId);
        }
        <div class="spanfull">
            <h3><a href="@detailUrl" class="dialog">@(tflow.FlowInfo.TargetFlow.Title)&nbsp;[@tflow.FlowInfo.TargetFlow.FlowCode]</a></h3>
            <p>@tflow.FlowInfo.TargetFlow.Message</p>
        </div>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>状态</th>
                    <th>输入材料</th>
                    <th>操作</th>
                    <th>输出材料</th>
                </tr>
            </thead>
            <tbody>
                @while (node != null)
                {
                    // 并行操作
                    if (node.IsInParallel())
                    {
                        var parallelOps = node.Owner.StateOperations();
                        var notDoneOps = node.ParallelOperations();
                        var nextOps = node.Operations;
                        <tr>
                            <td colspan="4">
                                <span>下一步需要@(string.Join(" ", parallelOps.Select(o => string.Format("[{0}]", o.Name))))</span>
                            </td>
                        </tr>
                        foreach (var cnode in node.Children)
                        {
                        @RenderPage("TableNode.cshtml", new { TargetStateWrapper = cnode })
                        }
                        <tr>
                            <td colspan="4">
                                <span>你必须先完成</span>
                                @foreach (var op in parallelOps)
                                {
                                    if(notDoneOps.Any(o => o.OperationId == op.OperationId))
                                    {
                                        <a class="btn btn-primary dialog" href="@(op.OperationUrl)?operationId=@(op.OperationId)&targetFlowId=@(tflow.FlowInfo.TargetFlow.TargetFlowId)&targetStateId=@(node.Owner.TargetState().TargetStateId)&targetId=@(tflow.FlowInfo.TargetFlow.TargetId)">@op.Name</a>
                                    }
                                    else
                                    {
                                        <span>[@op.Name]</span>
                                    }
                                }
                                @if(nextOps != null && nextOps.Count() > 0)
                                {
                                    <span>继续下一步操作：</span>
                                    foreach(var op in nextOps)
                                    {
                                        <a class="btn btn-primary dialog" href="@(op.OperationUrl)?operationId=@(op.OperationId)&targetFlowId=@(tflow.FlowInfo.TargetFlow.TargetFlowId)&&targetId=@(tflow.FlowInfo.TargetFlow.TargetId)">@op.Name</a>
                                    }
                                }
                            </td>
                        </tr>
                    }
                    else
                    {
                        @RenderPage("TableNode.cshtml", new { TargetStateWrapper = node })
                    }
                    node = node.Next;
                }
            </tbody>
        </table>
    }
</div>
