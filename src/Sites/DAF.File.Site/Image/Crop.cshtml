@using DAF.Core;
@using DAF.Web;
@{
    Layout = "~/_Dialog.cshtml";
    string dialogId = Request.QueryString["dialogId"];
    string file = Request.QueryString["file"];
    if(string.IsNullOrEmpty(file) || file == "null")
    {
        file = AssetsHelper.CDNError(404, "jpg").ToString();
    }
    int width = Request.QueryString["width"].ConvertTo<int>(120);
    int height = Request.QueryString["height"].ConvertTo<int>(120);
    string owner = Request.QueryString["owner"].DefaultIfNull("");
    string property = Request.QueryString["property"].DefaultIfNull("");
    string args = Request.QueryString["args"];
}
@section head {
    @AssetsHelper.CDNCss("jquery.fileupload-ui.css")
    @AssetsHelper.CDNCss("jquery.Jcrop.css")
    @AssetsHelper.CDNScript("jquery.iframe-transport.js")
    @AssetsHelper.CDNScript("jquery.fileupload.js")
    @AssetsHelper.CDNScript("jquery.fileupload-fp.js")
    @AssetsHelper.CDNScript("jquery.Jcrop.min.js")
}
@section end {
    <script type="text/javascript">
        var jcrop_api;
        var dim, cropCoords;

        $(function () {
            $('#uploadForm').fileupload({
                maxFileSize: 5 * 1024 * 1024,
                acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                add: function (e, data) {
                    $(this).fileupload('process', data).done(function () {
                        data.submit();
                    });
                },
                done: function (e, data) {
                    Progress();
                    var results = eval(data.result);
                    var file = ($.isArray(results) && results[0]) || { error: 'emptyResult' };
                    if(file && file.url){
                        InitImage(file.url);
                    }
                },
                progress: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    Progress(progress);
                }
            });

            $('#originalImg').bind('load', function(){
                var src = $('#originalImg').prop('src');
                $('#cropImg').prop('src', src);
                $('#originalImg').Jcrop({
                    onChange: ShowPreview,
                    onSelect: ShowPreview
                }, function(){
                    jcrop_api = this;
                    dim = jcrop_api.getBounds();
                    jcrop_api.setSelect([ 0, 0, @width, @height ]);
                    jcrop_api.setOptions({ aspectRatio: @((double)width/height) });
                    jcrop_api.focus();
                    $('#cropImg').css({ width: dim[0].toString() + 'px', height: dim[1].toString() + 'px' });
                });
            });

        @if(!string.IsNullOrEmpty(file)){
            @:InitImage('@file');
        }

        });

        function InitImage(file)
        {
            if(jcrop_api){
                jcrop_api.destroy();
            };
            var src = AppendUrl(file, 'v', new Date().getTime());
            $('#originalImg').prop('src', src).css({ width: 'auto', height: 'auto' });
        }

        function ShowPreview(coords) {
            if (parseInt(coords.w) > 0)
            {
                cropCoords = coords;
                var rx = 100 / coords.w;
                var ry = 100 / coords.h;

                var iw = $('#originalImg').width();
                var ih = $('#originalImg').height();

                $('#cropImg').css({
                    width: Math.round(rx * iw) + 'px',
                    height: Math.round(ry * ih) + 'px',
                    marginLeft: '-' + Math.round(rx * coords.x) + 'px',
                    marginTop: '-' + Math.round(ry * coords.y) + 'px'
                });
            }
        }

        function CalculateTrueCoords()
        {
            var tw = $('#originalImg').prop('width');
            var th = $('#originalImg').prop('height');
            var bw = $('#originalImg').width();
            var bh = $('#originalImg').height();

            var cx = cropCoords.x / bw * tw;
            var cy = cropCoords.y / bh * th;
            var cw = cropCoords.w / bw * tw;
            var ch = cropCoords.h / bh * th;
            return { x: cx, y: cy, w: cw, h: ch };
        }

        function CropImage() {
            var src = $('#originalImg').attr('src');
            var tcoords = CalculateTrueCoords();
            var url = "/Api/Image/Save?file=" + escape(src) +"&x=" + tcoords.x + '&y=' + tcoords.y + '&width=' + tcoords.w + '&height=' + tcoords.h;
            GetJson(url, function(data) {
                InitImage(src);
                if(typeof window.OnCroppedImage == "function"){
                    window.OnCroppedImage(data, '@args', '@dialogId');
                }
                PostMessage("cropimage", { url: '@(AuthHelper.CurrentClient.BaseUrl.TrimEnd('/'))' + data, owner: '@owner', property: '@property', args:'@args', dialogId:'@dialogId' });
                CloseDialog('@dialogId');
            });
        }

        function NotCropImage() {
            var src = $('#originalImg').attr('src');
            if(typeof window.OnCroppedImage == "function"){
                window.OnCroppedImage(src, '@args', '@dialogId');
            }
            PostMessage("cropimage", { url: '@(AuthHelper.CurrentClient.BaseUrl.TrimEnd('/'))' + src, owner: '@owner', property: '@property', args:'@args', dialogId:'@dialogId' });
            CloseDialog('@dialogId');
        }

        function Cancel(){
            if(typeof window.OnCancel == "function"){
                window.OnCancel('@dialogId');
            }
            PostMessage('canceldialog', { dialogId:'@dialogId' });
            CloseDialog('@dialogId');
        }
    </script>
}
<div class="row">
    <div class="span9">
        <div style="z-index: 1; position: relative;">
            <img id="originalImg" class="img-none" src="" style="display: inline-block; max-width: 500px; max-height: 500px; min-width: 120px; min-height: 120px;" />
        </div>
    </div>
    <div class="span3">
        <div style="width:@(width)px; height:@(height)px; overflow:hidden;">
            <img id="cropImg" class="img-none" src="" style="display: inline-block;" />
        </div>
        <div class="tgap3">
            <form id="uploadForm" action="/Handlers/UploadHandler.ashx?owner=@(owner)" method="POST" enctype="multipart/form-data">
            <div class="alert alert-block">
                <h5 class="alert-heading">注：</h5>
                <ol>
                    <li>仅能上传图片文件（.png, .jpg, .jpeg, .gif）</li>
                    <li>文件大小不超过&nbsp;5MB</li>
                </ol>
            </div>
            <button type="button" class="btn btn-primary" onclick="$('#fileSelector').trigger('click');">
                <i class="icon-upload"></i>
                <span>选择图片</span></button>
            <input id="fileSelector" type="file" name="files[]" style="display: none;">
            </form>
        </div>
    </div>
</div>
<div class="row form-actions">
    <button class="btn btn-success" type="button" onclick="CropImage();">
        <i class="icon-ok"></i><span>保存裁剪图片</span></button>
    <button class="btn" type="button" onclick="NotCropImage();">
        <i class="icon-ok"></i><span>使用未裁剪图片</span></button>
    <button class="btn" type="button" onclick="Cancel();">
        <i class="icon-remove"></i><span>取消</span></button>
</div>


